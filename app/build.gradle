apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "com.jaredsburrows.spoon"

android {
    signingConfigs {
        SeattleExplorer {
            // blank and filled in via project build.gradle
        }
    }
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "com.loc8r.seattleexplorer"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resConfigs "en" // Languages supported Auth UI

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }

    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //testing
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    spoon {
        // for debug output
        debug = true

        // To run a single test class
        //className = 'com.example.espressorobot.DenemeTest'

        // To run a single method in TestCase
        //methodName = 'testMyApp'

        // To execute the tests device by device */
        //sequential = true

        // To grant permissions to Android M >= devices */
        //grantAllPermissions = true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:exifinterface:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    implementation "android.arch.navigation:navigation-fragment:$navigationVersion"
    implementation "android.arch.navigation:navigation-ui:$navigationVersion"
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$leakCanaryVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "com.google.firebase:firebase-auth:$firebaseAuthVersion"

    //DI
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"

    //Domain
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"

    //Presentation
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"

    //Remote
    implementation "com.google.firebase:firebase-firestore:$firestoreVersion"
    implementation "com.google.firebase:firebase-core:$firebaseCoreVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinReflectVersion"

    // Cache
    implementation "javax.inject:javax.inject:$javaxInjectVersion"
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    implementation "android.arch.persistence.room:rxjava2:$roomVersion"
    debugImplementation "com.amitshekhar.android:debug-db:$debugDBVersion"
    compileOnly "javax.annotation:jsr250-api:$javaxAnnotationVersion"

    // Testing
    testImplementation "junit:junit:$junitVersion"
    testImplementation "android.arch.core:core-testing:$archTestingVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlin2Version"
    androidTestImplementation "com.android.support.test:runner:$runnerVersion"
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.squareup.spoon:spoon-client:$spoonClientVersion"
    androidTestImplementation "com.jraska:falcon-spoon-compat:$falconSpoonVerison"
    implementation "com.jraska:falcon:$falconVersion"

    // Cache testing
    testImplementation "android.arch.persistence.room:testing:$roomVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
}

apply plugin: 'com.google.gms.google-services'
